Terminals unused in grammar

   ENDFILE
   ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier _id ';'
    7                | type_specifier _id '[' _num ']' ';'

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier _id '(' params ')'
   11                | type_specifier _id '(' params ')' compound_stmt

   12 params: param_list
   13       | VOID

   14 param_list: param_list ',' param
   15           | param

   16 param: type_specifier _id
   17      | type_specifier _id '[' ']'

   18 compound_stmt: '{' local_declarations statement_list '}'

   19 local_declarations: local_declarations var_declaration
   20                   | %empty

   21 statement_list: statement_list statement
   22               | %empty

   23 statement: expression_stmt
   24          | compound_stmt
   25          | selection_stmt
   26          | iteration_stmt
   27          | return_stmt

   28 expression_stmt: expression ';'
   29                | ';'

   30 selection_stmt: IF '(' expression ')' statement
   31               | IF '(' expression ')' statement ELSE statement

   32 iteration_stmt: WHILE '(' expression ')' statement

   33 return_stmt: RET ';'
   34            | RET expression

   35 expression: var '=' simple_expression
   36           | simple_expression

   37 var: _id
   38    | _id '[' expression ']'

   39 simple_expression: additive_expression relop additive_expression
   40                  | additive_expression

   41 relop: LE
   42      | LT
   43      | GT
   44      | GE
   45      | EQ
   46      | NEQ

   47 additive_expression: additive_expression addop term
   48                    | term

   49 addop: '+'
   50      | '-'

   51 term: term mulop factor
   52     | factor

   53 mulop: '*'
   54      | '/'

   55 factor: '(' expression ')'
   56       | var
   57       | call
   58       | _num

   59 call: _id '(' args ')'

   60 args: arg_list
   61     | %empty

   62 arg_list: arg_list ',' expression
   63         | expression

   64 _id: ID

   65 _num: NUM


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 30 31 32 55 59
')' (41) 10 11 30 31 32 55 59
'*' (42) 53
'+' (43) 49
',' (44) 14 62
'-' (45) 50
'/' (47) 54
';' (59) 6 7 28 29 33
'=' (61) 35
'[' (91) 7 17 38
']' (93) 7 17 38
'{' (123) 18
'}' (125) 18
error (256)
ENDFILE (258)
ERROR (259)
INT (260) 8
VOID (261) 9 13
ID (262) 64
NUM (263) 65
LT (264) 42
LE (265) 41
GT (266) 43
GE (267) 44
EQ (268) 45
NEQ (269) 46
IF (270) 30 31
WHILE (271) 32
RET (272) 33 34
LOWER_ELSE (273)
ELSE (274) 31


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
declaration_list (35)
    on left: 2 3, on right: 1 2
declaration (36)
    on left: 4 5, on right: 2 3
var_declaration (37)
    on left: 6 7, on right: 4 19
type_specifier (38)
    on left: 8 9, on right: 6 7 10 11 16 17
fun_declaration (39)
    on left: 10 11, on right: 5
params (40)
    on left: 12 13, on right: 10 11
param_list (41)
    on left: 14 15, on right: 12 14
param (42)
    on left: 16 17, on right: 14 15
compound_stmt (43)
    on left: 18, on right: 11 24
local_declarations (44)
    on left: 19 20, on right: 18 19
statement_list (45)
    on left: 21 22, on right: 18 21
statement (46)
    on left: 23 24 25 26 27, on right: 21 30 31 32
expression_stmt (47)
    on left: 28 29, on right: 23
selection_stmt (48)
    on left: 30 31, on right: 25
iteration_stmt (49)
    on left: 32, on right: 26
return_stmt (50)
    on left: 33 34, on right: 27
expression (51)
    on left: 35 36, on right: 28 30 31 32 34 38 55 62 63
var (52)
    on left: 37 38, on right: 35 56
simple_expression (53)
    on left: 39 40, on right: 35 36
relop (54)
    on left: 41 42 43 44 45 46, on right: 39
additive_expression (55)
    on left: 47 48, on right: 39 40 47
addop (56)
    on left: 49 50, on right: 47
term (57)
    on left: 51 52, on right: 47 48 51
mulop (58)
    on left: 53 54, on right: 51
factor (59)
    on left: 55 56 57 58, on right: 51 52
call (60)
    on left: 59, on right: 57
args (61)
    on left: 60 61, on right: 59
arg_list (62)
    on left: 62 63, on right: 60 62
_id (63)
    on left: 64, on right: 6 7 10 11 16 17 37 38 59
_num (64)
    on left: 65, on right: 7 58


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . _id ';'
    7                | type_specifier . _id '[' _num ']' ';'
   10 fun_declaration: type_specifier . _id '(' params ')'
   11                | type_specifier . _id '(' params ')' compound_stmt

    ID  shift, and go to state 11

    _id  go to state 12


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

   64 _id: ID .

    $default  reduce using rule 64 (_id)


State 12

    6 var_declaration: type_specifier _id . ';'
    7                | type_specifier _id . '[' _num ']' ';'
   10 fun_declaration: type_specifier _id . '(' params ')'
   11                | type_specifier _id . '(' params ')' compound_stmt

    '('  shift, and go to state 13
    ';'  shift, and go to state 14
    '['  shift, and go to state 15


State 13

   10 fun_declaration: type_specifier _id '(' . params ')'
   11                | type_specifier _id '(' . params ')' compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    type_specifier  go to state 17
    params          go to state 18
    param_list      go to state 19
    param           go to state 20


State 14

    6 var_declaration: type_specifier _id ';' .

    $default  reduce using rule 6 (var_declaration)


State 15

    7 var_declaration: type_specifier _id '[' . _num ']' ';'

    NUM  shift, and go to state 21

    _num  go to state 22


State 16

    9 type_specifier: VOID .
   13 params: VOID .

    ')'       reduce using rule 13 (params)
    $default  reduce using rule 9 (type_specifier)


State 17

   16 param: type_specifier . _id
   17      | type_specifier . _id '[' ']'

    ID  shift, and go to state 11

    _id  go to state 23


State 18

   10 fun_declaration: type_specifier _id '(' params . ')'
   11                | type_specifier _id '(' params . ')' compound_stmt

    ')'  shift, and go to state 24


State 19

   12 params: param_list .
   14 param_list: param_list . ',' param

    ','  shift, and go to state 25

    $default  reduce using rule 12 (params)


State 20

   15 param_list: param .

    $default  reduce using rule 15 (param_list)


State 21

   65 _num: NUM .

    $default  reduce using rule 65 (_num)


State 22

    7 var_declaration: type_specifier _id '[' _num . ']' ';'

    ']'  shift, and go to state 26


State 23

   16 param: type_specifier _id .
   17      | type_specifier _id . '[' ']'

    '['  shift, and go to state 27

    $default  reduce using rule 16 (param)


State 24

   10 fun_declaration: type_specifier _id '(' params ')' .
   11                | type_specifier _id '(' params ')' . compound_stmt

    '{'  shift, and go to state 28

    $default  reduce using rule 10 (fun_declaration)

    compound_stmt  go to state 29


State 25

   14 param_list: param_list ',' . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 17
    param           go to state 30


State 26

    7 var_declaration: type_specifier _id '[' _num ']' . ';'

    ';'  shift, and go to state 31


State 27

   17 param: type_specifier _id '[' . ']'

    ']'  shift, and go to state 32


State 28

   18 compound_stmt: '{' . local_declarations statement_list '}'

    $default  reduce using rule 20 (local_declarations)

    local_declarations  go to state 33


State 29

   11 fun_declaration: type_specifier _id '(' params ')' compound_stmt .

    $default  reduce using rule 11 (fun_declaration)


State 30

   14 param_list: param_list ',' param .

    $default  reduce using rule 14 (param_list)


State 31

    7 var_declaration: type_specifier _id '[' _num ']' ';' .

    $default  reduce using rule 7 (var_declaration)


State 32

   17 param: type_specifier _id '[' ']' .

    $default  reduce using rule 17 (param)


State 33

   18 compound_stmt: '{' local_declarations . statement_list '}'
   19 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 22 (statement_list)

    var_declaration  go to state 34
    type_specifier   go to state 35
    statement_list   go to state 36


State 34

   19 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 19 (local_declarations)


State 35

    6 var_declaration: type_specifier . _id ';'
    7                | type_specifier . _id '[' _num ']' ';'

    ID  shift, and go to state 11

    _id  go to state 37


State 36

   18 compound_stmt: '{' local_declarations statement_list . '}'
   21 statement_list: statement_list . statement

    ID     shift, and go to state 11
    NUM    shift, and go to state 21
    '('    shift, and go to state 38
    IF     shift, and go to state 39
    WHILE  shift, and go to state 40
    RET    shift, and go to state 41
    ';'    shift, and go to state 42
    '{'    shift, and go to state 28
    '}'    shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 45
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 37

    6 var_declaration: type_specifier _id . ';'
    7                | type_specifier _id . '[' _num ']' ';'

    ';'  shift, and go to state 14
    '['  shift, and go to state 15


State 38

   55 factor: '(' . expression ')'

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    expression           go to state 59
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 39

   30 selection_stmt: IF . '(' expression ')' statement
   31               | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 60


State 40

   32 iteration_stmt: WHILE . '(' expression ')' statement

    '('  shift, and go to state 61


State 41

   33 return_stmt: RET . ';'
   34            | RET . expression

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38
    ';'  shift, and go to state 62

    expression           go to state 63
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 42

   29 expression_stmt: ';' .

    $default  reduce using rule 29 (expression_stmt)


State 43

   18 compound_stmt: '{' local_declarations statement_list '}' .

    $default  reduce using rule 18 (compound_stmt)


State 44

   24 statement: compound_stmt .

    $default  reduce using rule 24 (statement)


State 45

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 46

   23 statement: expression_stmt .

    $default  reduce using rule 23 (statement)


State 47

   25 statement: selection_stmt .

    $default  reduce using rule 25 (statement)


State 48

   26 statement: iteration_stmt .

    $default  reduce using rule 26 (statement)


State 49

   27 statement: return_stmt .

    $default  reduce using rule 27 (statement)


State 50

   28 expression_stmt: expression . ';'

    ';'  shift, and go to state 64


State 51

   35 expression: var . '=' simple_expression
   56 factor: var .

    '='  shift, and go to state 65

    $default  reduce using rule 56 (factor)


State 52

   36 expression: simple_expression .

    $default  reduce using rule 36 (expression)


State 53

   39 simple_expression: additive_expression . relop additive_expression
   40                  | additive_expression .
   47 additive_expression: additive_expression . addop term

    LT   shift, and go to state 66
    LE   shift, and go to state 67
    GT   shift, and go to state 68
    GE   shift, and go to state 69
    EQ   shift, and go to state 70
    NEQ  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 40 (simple_expression)

    relop  go to state 74
    addop  go to state 75


State 54

   48 additive_expression: term .
   51 term: term . mulop factor

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 78


State 55

   52 term: factor .

    $default  reduce using rule 52 (term)


State 56

   57 factor: call .

    $default  reduce using rule 57 (factor)


State 57

   37 var: _id .
   38    | _id . '[' expression ']'
   59 call: _id . '(' args ')'

    '('  shift, and go to state 79
    '['  shift, and go to state 80

    $default  reduce using rule 37 (var)


State 58

   58 factor: _num .

    $default  reduce using rule 58 (factor)


State 59

   55 factor: '(' expression . ')'

    ')'  shift, and go to state 81


State 60

   30 selection_stmt: IF '(' . expression ')' statement
   31               | IF '(' . expression ')' statement ELSE statement

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    expression           go to state 82
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 61

   32 iteration_stmt: WHILE '(' . expression ')' statement

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    expression           go to state 83
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 62

   33 return_stmt: RET ';' .

    $default  reduce using rule 33 (return_stmt)


State 63

   34 return_stmt: RET expression .

    $default  reduce using rule 34 (return_stmt)


State 64

   28 expression_stmt: expression ';' .

    $default  reduce using rule 28 (expression_stmt)


State 65

   35 expression: var '=' . simple_expression

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    var                  go to state 84
    simple_expression    go to state 85
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 66

   42 relop: LT .

    $default  reduce using rule 42 (relop)


State 67

   41 relop: LE .

    $default  reduce using rule 41 (relop)


State 68

   43 relop: GT .

    $default  reduce using rule 43 (relop)


State 69

   44 relop: GE .

    $default  reduce using rule 44 (relop)


State 70

   45 relop: EQ .

    $default  reduce using rule 45 (relop)


State 71

   46 relop: NEQ .

    $default  reduce using rule 46 (relop)


State 72

   49 addop: '+' .

    $default  reduce using rule 49 (addop)


State 73

   50 addop: '-' .

    $default  reduce using rule 50 (addop)


State 74

   39 simple_expression: additive_expression relop . additive_expression

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    var                  go to state 84
    additive_expression  go to state 86
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 75

   47 additive_expression: additive_expression addop . term

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    var     go to state 84
    term    go to state 87
    factor  go to state 55
    call    go to state 56
    _id     go to state 57
    _num    go to state 58


State 76

   53 mulop: '*' .

    $default  reduce using rule 53 (mulop)


State 77

   54 mulop: '/' .

    $default  reduce using rule 54 (mulop)


State 78

   51 term: term mulop . factor

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    var     go to state 84
    factor  go to state 88
    call    go to state 56
    _id     go to state 57
    _num    go to state 58


State 79

   59 call: _id '(' . args ')'

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    $default  reduce using rule 61 (args)

    expression           go to state 89
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    args                 go to state 90
    arg_list             go to state 91
    _id                  go to state 57
    _num                 go to state 58


State 80

   38 var: _id '[' . expression ']'

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    expression           go to state 92
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 81

   55 factor: '(' expression ')' .

    $default  reduce using rule 55 (factor)


State 82

   30 selection_stmt: IF '(' expression . ')' statement
   31               | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 93


State 83

   32 iteration_stmt: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 94


State 84

   56 factor: var .

    $default  reduce using rule 56 (factor)


State 85

   35 expression: var '=' simple_expression .

    $default  reduce using rule 35 (expression)


State 86

   39 simple_expression: additive_expression relop additive_expression .
   47 additive_expression: additive_expression . addop term

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 39 (simple_expression)

    addop  go to state 75


State 87

   47 additive_expression: additive_expression addop term .
   51 term: term . mulop factor

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 47 (additive_expression)

    mulop  go to state 78


State 88

   51 term: term mulop factor .

    $default  reduce using rule 51 (term)


State 89

   63 arg_list: expression .

    $default  reduce using rule 63 (arg_list)


State 90

   59 call: _id '(' args . ')'

    ')'  shift, and go to state 95


State 91

   60 args: arg_list .
   62 arg_list: arg_list . ',' expression

    ','  shift, and go to state 96

    $default  reduce using rule 60 (args)


State 92

   38 var: _id '[' expression . ']'

    ']'  shift, and go to state 97


State 93

   30 selection_stmt: IF '(' expression ')' . statement
   31               | IF '(' expression ')' . statement ELSE statement

    ID     shift, and go to state 11
    NUM    shift, and go to state 21
    '('    shift, and go to state 38
    IF     shift, and go to state 39
    WHILE  shift, and go to state 40
    RET    shift, and go to state 41
    ';'    shift, and go to state 42
    '{'    shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 98
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 94

   32 iteration_stmt: WHILE '(' expression ')' . statement

    ID     shift, and go to state 11
    NUM    shift, and go to state 21
    '('    shift, and go to state 38
    IF     shift, and go to state 39
    WHILE  shift, and go to state 40
    RET    shift, and go to state 41
    ';'    shift, and go to state 42
    '{'    shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 99
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 95

   59 call: _id '(' args ')' .

    $default  reduce using rule 59 (call)


State 96

   62 arg_list: arg_list ',' . expression

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    '('  shift, and go to state 38

    expression           go to state 100
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 97

   38 var: _id '[' expression ']' .

    $default  reduce using rule 38 (var)


State 98

   30 selection_stmt: IF '(' expression ')' statement .
   31               | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 101

    $default  reduce using rule 30 (selection_stmt)


State 99

   32 iteration_stmt: WHILE '(' expression ')' statement .

    $default  reduce using rule 32 (iteration_stmt)


State 100

   62 arg_list: arg_list ',' expression .

    $default  reduce using rule 62 (arg_list)


State 101

   31 selection_stmt: IF '(' expression ')' statement ELSE . statement

    ID     shift, and go to state 11
    NUM    shift, and go to state 21
    '('    shift, and go to state 38
    IF     shift, and go to state 39
    WHILE  shift, and go to state 40
    RET    shift, and go to state 41
    ';'    shift, and go to state 42
    '{'    shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 102
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 102

   31 selection_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 31 (selection_stmt)
